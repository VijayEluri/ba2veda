
package magnetico.ws.search;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.5-b03-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "SearchEndpoint", targetNamespace = "http://search.bigarchive.magnetosoft.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SearchEndpoint {


    /**
     * 
     * @param searchResultsRequest
     * @param sessionTicketId
     * @return
     *     returns magnetico.ws.search.SearchResultsResponseType
     * @throws AccessDeniedException_Exception
     * @throws BigArchiveServerException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSearchResults", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.GetSearchResults")
    @ResponseWrapper(localName = "getSearchResultsResponse", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.GetSearchResultsResponse")
    public SearchResultsResponseType getSearchResults(
        @WebParam(name = "sessionTicketId", targetNamespace = "")
        String sessionTicketId,
        @WebParam(name = "searchResultsRequest", targetNamespace = "")
        SearchResultsRequestType searchResultsRequest)
        throws AccessDeniedException_Exception, BigArchiveServerException_Exception
    ;

    /**
     * 
     * @param searchRequest
     * @param sessionTicketId
     * @return
     *     returns magnetico.ws.search.SearchResponseType
     * @throws AccessDeniedException_Exception
     * @throws BigArchiveServerException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchAsync", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.SearchAsync")
    @ResponseWrapper(localName = "searchAsyncResponse", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.SearchAsyncResponse")
    public SearchResponseType searchAsync(
        @WebParam(name = "sessionTicketId", targetNamespace = "")
        String sessionTicketId,
        @WebParam(name = "searchRequest", targetNamespace = "")
        SearchRequestType searchRequest)
        throws AccessDeniedException_Exception, BigArchiveServerException_Exception
    ;

    /**
     * 
     * @param searchRequest
     * @param sessionTicketId
     * @return
     *     returns magnetico.ws.search.SearchResponseType
     * @throws AccessDeniedException_Exception
     * @throws BigArchiveServerException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchSync", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.SearchSync")
    @ResponseWrapper(localName = "searchSyncResponse", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.SearchSyncResponse")
    public SearchResponseType searchSync(
        @WebParam(name = "sessionTicketId", targetNamespace = "")
        String sessionTicketId,
        @WebParam(name = "searchRequest", targetNamespace = "")
        SearchRequestType searchRequest)
        throws AccessDeniedException_Exception, BigArchiveServerException_Exception
    ;

    /**
     * 
     * @return
     *     returns boolean
     * @throws BigArchiveServerException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isSearchReady", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.IsSearchReady")
    @ResponseWrapper(localName = "isSearchReadyResponse", targetNamespace = "http://search.bigarchive.magnetosoft.ru/", className = "magnetico.ws.search.IsSearchReadyResponse")
    public boolean isSearchReady()
        throws BigArchiveServerException_Exception
    ;

}
