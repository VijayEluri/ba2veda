
package magnetico.ws.organization;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.5-b03-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "OrganizationEntityEndpoint", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OrganizationEntityEndpoint {


    /**
     * 
     * @param uid
     * @return
     *     returns magnetico.ws.organization.EntityType
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEntity", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetEntity")
    @ResponseWrapper(localName = "getEntityResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetEntityResponse")
    public EntityType getEntity(
        @WebParam(name = "uid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String uid)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param query
     * @param context
     * @return
     *     returns magnetico.ws.organization.EntityContainerType
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryEntityContainer", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.QueryEntityContainer")
    @ResponseWrapper(localName = "queryEntityContainerResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.QueryEntityContainerResponse")
    public EntityContainerType queryEntityContainer(
        @WebParam(name = "context", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String context,
        @WebParam(name = "query", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        PreparedQueryType query)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param container
     * @param context
     * @return
     *     returns long
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "writeEntityContainer", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.WriteEntityContainer")
    @ResponseWrapper(localName = "writeEntityContainerResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.WriteEntityContainerResponse")
    public long writeEntityContainer(
        @WebParam(name = "context", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String context,
        @WebParam(name = "container", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        EntityContainerType container)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param entity
     * @param context
     * @return
     *     returns java.lang.String
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "writeEntity", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.WriteEntity")
    @ResponseWrapper(localName = "writeEntityResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.WriteEntityResponse")
    public String writeEntity(
        @WebParam(name = "context", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String context,
        @WebParam(name = "entity", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        EntityType entity)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param query
     * @param context
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queryUids", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.QueryUids")
    @ResponseWrapper(localName = "queryUidsResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.QueryUidsResponse")
    public List<String> queryUids(
        @WebParam(name = "context", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String context,
        @WebParam(name = "query", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        PreparedQueryType query)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param fields
     * @return
     *     returns boolean
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validateFields", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.ValidateFields")
    @ResponseWrapper(localName = "validateFieldsResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.ValidateFieldsResponse")
    public boolean validateFields(
        @WebParam(name = "fields", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        List<String> fields)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param uid
     * @param adjType
     * @param relationName
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdjacency", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetAdjacency")
    @ResponseWrapper(localName = "getAdjacencyResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetAdjacencyResponse")
    public List<String> getAdjacency(
        @WebParam(name = "uid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String uid,
        @WebParam(name = "relationName", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String relationName,
        @WebParam(name = "adjType", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        AdjacencyTypeEnum adjType)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param rootUid
     * @param name
     * @param relationList
     */
    @WebMethod
    @RequestWrapper(localName = "createTreeAccessor", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.CreateTreeAccessor")
    @ResponseWrapper(localName = "createTreeAccessorResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.CreateTreeAccessorResponse")
    public void createTreeAccessor(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name,
        @WebParam(name = "rootUid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String rootUid,
        @WebParam(name = "relationList", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        List<RelationMappingType> relationList);

    /**
     * 
     * @param name
     */
    @WebMethod
    @RequestWrapper(localName = "removeTreeAccessor", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.RemoveTreeAccessor")
    @ResponseWrapper(localName = "removeTreeAccessorResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.RemoveTreeAccessorResponse")
    public void removeTreeAccessor(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTARoot", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTARoot")
    @ResponseWrapper(localName = "getTARootResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTARootResponse")
    public String getTARoot(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param uid
     * @param name
     * @return
     *     returns java.lang.String
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTAParentNode", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTAParentNode")
    @ResponseWrapper(localName = "getTAParentNodeResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTAParentNodeResponse")
    public String getTAParentNode(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name,
        @WebParam(name = "uid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String uid)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param uid
     * @param name
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTAChildNodes", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTAChildNodes")
    @ResponseWrapper(localName = "getTAChildNodesResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTAChildNodesResponse")
    public List<String> getTAChildNodes(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name,
        @WebParam(name = "uid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String uid)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param uid
     * @param name
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTAPath", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTAPath")
    @ResponseWrapper(localName = "getTAPathResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTAPathResponse")
    public List<String> getTAPath(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name,
        @WebParam(name = "uid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String uid)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param uid
     * @param name
     * @return
     *     returns magnetico.ws.organization.TreeNodeType
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTASubtree", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTASubtree")
    @ResponseWrapper(localName = "getTASubtreeResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTASubtreeResponse")
    public TreeNodeType getTASubtree(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name,
        @WebParam(name = "uid", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String uid)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @param uids
     * @param name
     * @return
     *     returns magnetico.ws.organization.TreeNodeType
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTACovereageSubtree", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTACovereageSubtree")
    @ResponseWrapper(localName = "getTACovereageSubtreeResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetTACovereageSubtreeResponse")
    public TreeNodeType getTACovereageSubtree(
        @WebParam(name = "name", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        String name,
        @WebParam(name = "uids", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        List<String> uids)
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "cleanup", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.Cleanup")
    @ResponseWrapper(localName = "cleanupResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.CleanupResponse")
    public void cleanup()
        throws OrganizationServiceException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetVersionResponse")
    public String getVersion();

    /**
     * 
     * @param uids
     * @return
     *     returns java.util.List<magnetico.ws.organization.EntityType>
     * @throws OrganizationServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEntities", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetEntities")
    @ResponseWrapper(localName = "getEntitiesResponse", targetNamespace = "http://organization.magnet.magnetosoft.ru/", className = "magnetico.ws.organization.GetEntitiesResponse")
    public List<EntityType> getEntities(
        @WebParam(name = "uids", targetNamespace = "http://organization.magnet.magnetosoft.ru/")
        List<String> uids)
        throws OrganizationServiceException_Exception
    ;

}
